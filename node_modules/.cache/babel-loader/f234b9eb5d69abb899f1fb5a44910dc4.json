{"ast":null,"code":"var _jsxFileName = \"/Users/clint/Desktop/lms-app/LMS-APP/lms-frontend/src/landingPage/pages/coursesPage/Search/Function/Grid/SearchFunction.js\";\nimport React, { useState } from \"react\";\nimport \"../../Searchbar.scss\";\nimport SearchFunctionGrid from \"../SearchFunction/SearchFunctionGrid\";\nimport SearchPagination from \"../SearchFunction/SearchPagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchFunction = ({\n  data,\n  searchTerm\n}) => {\n  let results = [];\n  let countResults = 0; // if results too long 6+ show pagination\n\n  function togglePagination() {\n    // count results from search and push the values to an array\n    data.slice(0, [data.length]).filter(val => {\n      return val; // // nothing in search\n      // if (searchTerm === \"\") {\n      //   //pass\n      // }\n      // // search by title\n      // else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n      //   results.push(val);\n      //   return val;\n      // }\n      // // search by difficulty\n      // else if (\n      //   val.difficulty.toLowerCase().includes(searchTerm.toLowerCase())\n      // ) {\n      //   results.push(val);\n      //   return val;\n      // }\n      // // search by author\n      // else if (val.author.toLowerCase().includes(searchTerm.toLowerCase())) {\n      //   results.push(val);\n      //   return val;\n      // }\n    });\n    let count = results.length;\n    countResults = count; // logic for if count is over 6 then pagination set true\n\n    if (count > 6) {\n      // console.log(countResults);\n      return true;\n    } else {\n      // console.log(countResults);\n      return false;\n    }\n  }\n\n  function showMsg() {\n    if (countResults === 0 && countResults < 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [togglePagination() ? /*#__PURE__*/_jsxDEV(SearchPagination, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SearchFunctionGrid, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), showMsg() ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"no-results\",\n      children: \"No search results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 20\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchFunction;\nexport default SearchFunction;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchFunction\");","map":{"version":3,"sources":["/Users/clint/Desktop/lms-app/LMS-APP/lms-frontend/src/landingPage/pages/coursesPage/Search/Function/Grid/SearchFunction.js"],"names":["React","useState","SearchFunctionGrid","SearchPagination","SearchFunction","data","searchTerm","results","countResults","togglePagination","slice","length","filter","val","count","showMsg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,sBAAP;AAEA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAC/C,MAAIC,OAAO,GAAG,EAAd;AAEA,MAAIC,YAAY,GAAG,CAAnB,CAH+C,CAI/C;;AACA,WAASC,gBAAT,GAA4B;AAC1B;AACAJ,IAAAA,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,CAACL,IAAI,CAACM,MAAN,CAAd,EAA6BC,MAA7B,CAAqCC,GAAD,IAAS;AAC3C,aAAOA,GAAP,CAD2C,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAvBD;AAwBA,QAAIC,KAAK,GAAGP,OAAO,CAACI,MAApB;AACAH,IAAAA,YAAY,GAAGM,KAAf,CA3B0B,CA4B1B;;AACA,QAAIA,KAAK,GAAG,CAAZ,EAAe;AACb;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL;AACA,aAAO,KAAP;AACD;AACF;;AAED,WAASC,OAAT,GAAmB;AACjB,QAAIP,YAAY,KAAK,CAAjB,IAAsBA,YAAY,GAAG,CAAzC,EAA4C;AAC1C,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAED,sBACE;AAAA,eACGC,gBAAgB,kBACf,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,YADe,gBAGf,QAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ,EAMGQ,OAAO,kBAAK;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,GAAyD,EANnE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7DD;;KAAMX,c;AA+DN,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"../../Searchbar.scss\";\n\nimport SearchFunctionGrid from \"../SearchFunction/SearchFunctionGrid\";\nimport SearchPagination from \"../SearchFunction/SearchPagination\";\n\nconst SearchFunction = ({ data, searchTerm }) => {\n  let results = [];\n\n  let countResults = 0;\n  // if results too long 6+ show pagination\n  function togglePagination() {\n    // count results from search and push the values to an array\n    data.slice(0, [data.length]).filter((val) => {\n      return val;\n      // // nothing in search\n      // if (searchTerm === \"\") {\n      //   //pass\n      // }\n      // // search by title\n      // else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n      //   results.push(val);\n      //   return val;\n      // }\n      // // search by difficulty\n      // else if (\n      //   val.difficulty.toLowerCase().includes(searchTerm.toLowerCase())\n      // ) {\n      //   results.push(val);\n      //   return val;\n      // }\n      // // search by author\n      // else if (val.author.toLowerCase().includes(searchTerm.toLowerCase())) {\n      //   results.push(val);\n      //   return val;\n      // }\n    });\n    let count = results.length;\n    countResults = count;\n    // logic for if count is over 6 then pagination set true\n    if (count > 6) {\n      // console.log(countResults);\n      return true;\n    } else {\n      // console.log(countResults);\n      return false;\n    }\n  }\n\n  function showMsg() {\n    if (countResults === 0 && countResults < 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <div>\n      {togglePagination() ? (\n        <SearchPagination results={results} />\n      ) : (\n        <SearchFunctionGrid results={results} />\n      )}\n      {showMsg() ? <h3 className=\"no-results\">No search results</h3> : \"\"}\n    </div>\n  );\n};\n\nexport default SearchFunction;\n"]},"metadata":{},"sourceType":"module"}