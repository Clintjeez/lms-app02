{"ast":null,"code":"var _jsxFileName = \"/Users/clint/Desktop/lms-app/LMS-APP/lms-frontend/src/landingPage/pages/coursesPage/Search/Function/Grid/CoursesGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../../Searchbar.scss\"; // import swiper\n\nimport { Swiper, SwiperSlide } from \"swiper/react\"; //import CourseCard\n\nimport CourseCard from \"../../../../../../components/courseCard/courseCard\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { HiChevronLeft, HiChevronRight } from \"react-icons/hi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursesGrid = ({\n  data\n}) => {\n  _s();\n\n  const matches = useMediaQuery(\"(max-width: 600px)\");\n  const pagination = {\n    clickable: true,\n    renderBullet: function (index, className) {\n      return '<span class=\"' + className + '\">' + (index + 1) + \"</span>\";\n    }\n  };\n  return matches ?\n  /*#__PURE__*/\n  // mobile slider\n  _jsxDEV(Swiper, {\n    slidesPerView: 1,\n    spaceBetween: 20,\n    centeredSlides: false,\n    loop: false,\n    pagination: pagination,\n    navigation: {\n      nextEl: \".next-course\",\n      prevEl: \".prev-course\"\n    },\n    dynamicbullets: \"true\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-list\",\n      children: data.map((val, index) => {\n        return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"course-item\",\n            children: /*#__PURE__*/_jsxDEV(CourseCard, {\n              id: index,\n              title: val.title,\n              thumbnail: val.thumbnail,\n              author: val.author,\n              rating: val.rating,\n              rateCount: val.rateCount,\n              level: val.difficulty,\n              timeEstimate: val.timeEstimate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) :\n  /*#__PURE__*/\n  // grid display of all courses\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(HiChevronLeft, {\n        className: \"prev-course\",\n        size: 40,\n        style: {\n          fill: \"#828282\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      spaceBetween: 25,\n      slidesPerView: 1,\n      centeredSlides: true,\n      loop: false,\n      navigation: {\n        nextEl: \".next-course\",\n        prevEl: \".prev-course\"\n      },\n      pagination: pagination,\n      scrollbar: {\n        draggable: true\n      } // onSwiper={(swiper) => console.log(swiper)}\n      // onSlideChange={() => console.log(\"slide change\")}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-list\",\n          children: data.slice(0, 6).map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course-item\",\n              children: /*#__PURE__*/_jsxDEV(CourseCard, {\n                id: index,\n                title: val.title,\n                thumbnail: val.thumbnail,\n                author: val.author,\n                rating: val.rating,\n                rateCount: val.rateCount,\n                level: val.difficulty,\n                timeEstimate: val.timeEstimate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-list\",\n          children: data.slice(6, 12).map((val, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"course-item\",\n              children: /*#__PURE__*/_jsxDEV(CourseCard, {\n                id: index,\n                title: val.title,\n                thumbnail: val.thumbnail,\n                author: val.author,\n                rating: val.rating,\n                rateCount: val.rateCount,\n                level: val.difficulty,\n                timeEstimate: val.timeEstimate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(HiChevronRight, {\n        className: \"next-course\",\n        size: 40,\n        style: {\n          fill: \"#828282\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoursesGrid, \"Notg82ym9o1DByeCiLcTemAcsz0=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = CoursesGrid;\nexport default CoursesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesGrid\");","map":{"version":3,"sources":["/Users/clint/Desktop/lms-app/LMS-APP/lms-frontend/src/landingPage/pages/coursesPage/Search/Function/Grid/CoursesGrid.js"],"names":["React","Swiper","SwiperSlide","CourseCard","useMediaQuery","HiChevronLeft","HiChevronRight","CoursesGrid","data","matches","pagination","clickable","renderBullet","index","className","nextEl","prevEl","map","val","title","thumbnail","author","rating","rateCount","difficulty","timeEstimate","fill","draggable","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../../Searchbar.scss\";\n// import swiper\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n//import CourseCard\nimport CourseCard from \"../../../../../../components/courseCard/courseCard\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { HiChevronLeft, HiChevronRight } from \"react-icons/hi\";\n\nconst CoursesGrid = ({ data }) => {\n  const matches = useMediaQuery(\"(max-width: 600px)\");\n\n  const pagination = {\n    clickable: true,\n    renderBullet: function (index, className) {\n      return '<span class=\"' + className + '\">' + (index + 1) + \"</span>\";\n    },\n  };\n\n  return matches ? (\n    // mobile slider\n    <Swiper\n      slidesPerView={1}\n      spaceBetween={20}\n      centeredSlides={false}\n      loop={false}\n      pagination={pagination}\n      navigation={{\n        nextEl: \".next-course\",\n        prevEl: \".prev-course\",\n      }}\n      dynamicbullets=\"true\"\n    >\n      <div className=\"course-list\">\n        {data.map((val, index) => {\n          return (\n            <SwiperSlide>\n              <div className=\"course-item\" key={index}>\n                <CourseCard\n                  id={index}\n                  title={val.title}\n                  thumbnail={val.thumbnail}\n                  author={val.author}\n                  rating={val.rating}\n                  rateCount={val.rateCount}\n                  level={val.difficulty}\n                  timeEstimate={val.timeEstimate}\n                />\n              </div>\n            </SwiperSlide>\n          );\n        })}\n      </div>\n    </Swiper>\n  ) : (\n    // grid display of all courses\n    <div>\n    <button>\n      <HiChevronLeft className=\"prev-course\" size={40} style={{ fill: \"#828282\" }} />\n    </button>\n    <Swiper\n      spaceBetween={25}\n      slidesPerView={1}\n      centeredSlides={true}\n      loop={false}\n      navigation={{\n        nextEl: \".next-course\",\n        prevEl: \".prev-course\",\n      }}\n      pagination={pagination}\n      scrollbar={{ draggable: true }}\n      // onSwiper={(swiper) => console.log(swiper)}\n      // onSlideChange={() => console.log(\"slide change\")}\n    >\n      <SwiperSlide>\n        <div className=\"course-list\">\n          {/*course results id:0 - 6- page 1*/}\n          {data.slice(0, 6).map((val, index) => {\n            return (\n              <div className=\"course-item\" key={index}>\n                <CourseCard\n                  id={index}\n                  title={val.title}\n                  thumbnail={val.thumbnail}\n                  author={val.author}\n                  rating={val.rating}\n                  rateCount={val.rateCount}\n                  level={val.difficulty}\n                  timeEstimate={val.timeEstimate}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </SwiperSlide>\n      <SwiperSlide>\n        <div className=\"course-list\">\n          {/*course results id: 6-12- page 2*/}\n          {data.slice(6, 12).map((val, index) => {\n            return (\n              <div className=\"course-item\" key={index}>\n                <CourseCard\n                  id={index}\n                  title={val.title}\n                  thumbnail={val.thumbnail}\n                  author={val.author}\n                  rating={val.rating}\n                  rateCount={val.rateCount}\n                  level={val.difficulty}\n                  timeEstimate={val.timeEstimate}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </SwiperSlide>\n    </Swiper>\n    <button>\n      <HiChevronRight className=\"next-course\" size={40} style={{ fill: \"#828282\" }} />\n    </button>\n    </div>\n  );\n};\n\nexport default CoursesGrid;\n"]},"metadata":{},"sourceType":"module"}