{"ast":null,"code":"import { SIGNUP_SUCCESS, SIGNUP_FAIL, SIGNUP_START, LOGIN_SUCCESS, LOGIN_FAIL, LOGIN_START, LOGOUT, SET_MESSAGE } from \"./types\"; //import { successAction, errorAction } from \"./toastActions\";\n\nimport { userSignup, userLogin } from \"../../services/apiServices\";\nimport { errorAction, successAction } from \"./toastActions\";\nexport const signupStart = () => ({\n  type: SIGNUP_START\n});\nexport const signupFailure = error => ({\n  type: SIGNUP_FAIL,\n  payload: error\n});\nexport const signupSuccess = user => ({\n  type: SIGNUP_SUCCESS,\n  payload: user\n});\nexport const loginStart = () => ({\n  type: LOGIN_START\n});\nexport const loginFailure = error => ({\n  type: LOGIN_FAIL,\n  payload: error\n});\nexport const loginSuccess = user => ({\n  type: LOGIN_SUCCESS,\n  payload: user\n});\nexport const signupAsync = (data, history) => {\n  return async dispatch => {\n    try {\n      dispatch(signupStart());\n      const response = await userSignup(data);\n      console.log(response);\n      dispatch(successAction(\"Account created successfully!\"));\n      dispatch(signupSuccess());\n      history.push(\"/login\");\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n\n      dispatch(errorAction((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occured. Please try again\");\n      dispatch(signupFailure());\n      console.log((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n    }\n  };\n};\nexport const loginAsync = (data, history) => {\n  return async dispatch => {\n    try {\n      dispatch(loginStart());\n      const response = await userLogin(data);\n      console.log(response);\n      dispatch(successAction(\"Login successfully\"));\n      dispatch(loginSuccess);\n      history.push(\"dashboard\");\n    } catch (error) {\n      dispatch(errorAction(error.response.data.message));\n      dispatch(loginFailure());\n      console.log(error.response.data.message);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/clint/Desktop/lms-app/LMS-APP/lms-frontend/src/redux/action/auth.js"],"names":["SIGNUP_SUCCESS","SIGNUP_FAIL","SIGNUP_START","LOGIN_SUCCESS","LOGIN_FAIL","LOGIN_START","LOGOUT","SET_MESSAGE","userSignup","userLogin","errorAction","successAction","signupStart","type","signupFailure","error","payload","signupSuccess","user","loginStart","loginFailure","loginSuccess","signupAsync","data","history","dispatch","response","console","log","push","message","loginAsync"],"mappings":"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","sourcesContent":["import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  SIGNUP_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGIN_START,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\n//import { successAction, errorAction } from \"./toastActions\";\nimport { userSignup, userLogin } from \"../../services/apiServices\";\nimport { errorAction, successAction } from \"./toastActions\";\n\nexport const signupStart = () => ({\n  type: SIGNUP_START,\n});\n\nexport const signupFailure = (error) => ({\n  type: SIGNUP_FAIL,\n  payload: error,\n});\n\nexport const signupSuccess = (user) => ({\n  type: SIGNUP_SUCCESS,\n  payload: user,\n});\n\nexport const loginStart = () => ({\n  type: LOGIN_START,\n});\n\nexport const loginFailure = (error) => ({\n  type: LOGIN_FAIL,\n  payload: error,\n});\n\nexport const loginSuccess = (user) => ({\n  type: LOGIN_SUCCESS,\n  payload: user,\n});\n\nexport const signupAsync = (data, history) => {\n  return async (dispatch) => {\n    try {\n      dispatch(signupStart());\n      const response = await userSignup(data);\n      console.log(response);\n      dispatch(successAction(\"Account created successfully!\"));\n      dispatch(signupSuccess());\n      history.push(\"/login\");\n    } catch (error) {\n      dispatch(\n        errorAction(error.response?.data?.message) ||\n          \"An error occured. Please try again\"\n      );\n      dispatch(signupFailure());\n      console.log(error.response?.data?.message);\n    }\n  };\n};\n\nexport const loginAsync = (data, history) => {\n  return async (dispatch) => {\n    try {\n      dispatch(loginStart());\n      const response = await userLogin(data);\n      console.log(response);\n      dispatch(successAction(\"Login successfully\"));\n      dispatch(loginSuccess);\n      history.push(\"dashboard\");\n    } catch (error) {\n      dispatch(errorAction(error.response.data.message));\n      dispatch(loginFailure());\n      console.log(error.response.data.message);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}